
// Btn on nav 
.btn__nav{

    position: relative;
    font-size: 15px;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1em 2.5em;
    display: inline-block;
    border-radius: 6em;
    transition: all .2s;
    border: none;
    font-family: inherit;
    font-weight: 700;
    color: #21417F;
    background-color: white;
   
   &:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
   }
   
   &:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
   }
   
   &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
   }
   
   &::after {
    background-color: #fff;
   }
   
   &:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
   }
}







/*----------BTN in hero second navabar----------*/
.cssbuttons-io-button {
    background: transparent;
    color: $color-orange--primary;
    font-family: inherit;
    padding: 0.35em;
    padding-left: 1.2em;
    font-size: 17px;
    font-weight: 500;
    border-radius: 1.2em;
    letter-spacing: 0.05em;
    display: flex;
    align-items: center;
    // box-shadow: inset 0 0 1.6em -0.6em #714da6;
    overflow: hidden;
    border: 1px solid $color-orange--primary;
    position: relative;
    height: 2.8em;
    padding-right: 3.3em;
    cursor: pointer;
  }
  
  .cssbuttons-io-button .icon {
    background: $color-orange--primary;
    margin-left: 1em;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 2.2em;
    width: 2.2em;
    border-radius: 1.2em;
    // box-shadow: 0.1em 0.1em 0.6em 0.2em #7b52b9;
    right: 0.3em;
    transition: all 0.3s;
  }
  
  .cssbuttons-io-button:hover .icon {
    width: calc(100% - 0.6em);
  }
  
  .cssbuttons-io-button .icon svg {
    width: 1.1em;
    transition: transform 0.3s;
    color: #fff;
  }
  
  .cssbuttons-io-button:hover .icon svg {
    transform: translateX(0.1em);
  }
  
  .cssbuttons-io-button:active .icon {
    transform: scale(0.95);
  }
  


  /*-------------------------------------*/
  .btn__main--container {
    display: flex;
    justify-content: center;
    align-items: center;

  }


  $rotationDuration: 20s;
  $hoverDuration: 0.3s;
  
  $easeIn: cubic-bezier(0.32, 0, 0.67, 0);
  $easeOut: cubic-bezier(0.33, 1, 0.68, 1);
  
  $textColor: #2B3338;
  $bgColor: #A6B8B1;
  $accentColor: #E8D6C1;
  
  
  .BtnEstimate__container{
    
    position: fixed;
    bottom: 20px;
    right: 20px;
    padding: 10px 20px;


    text {
      font-family: "lato", sans-serif;
      font-size: 20px;
      fill: #fff;
      font-weight: 700;
      text-transform: uppercase;
      font-variant-ligatures: none;
      letter-spacing: 6px;
      animation: rotate 25s linear ;
      transform-origin: 250px 250px;
      text-shadow: #000 1px 0 5px;    }

      

.link {
	width: 7rem;
	height: 7rem;
	display: inline-block;
	font: 300 1.55rem/1.4 "Josefin Sans"; 
	text-transform: uppercase;
	letter-spacing: 0.1175em;
	word-spacing: 0.3em;
	text-decoration: none;

	&__svg {
		width: 100%;
		height: auto;
		transform-box: fill-box;
		fill: $textColor;
		stroke: $textColor;
		stroke-width: 0.05em;
		stroke-linecap: round;
		stroke-linejoin: round;
	}

	&__cloud {
		transform-origin: 50% 50%;
		animation: rotate normal infinite 3 * $rotationDuration linear;
		fill: rgba(255, 255, 255, 0.15);
	}

	&__face,
	&__arrow {
		transform-origin: 50% 50%;
		transition: transform $hoverDuration / 2 $easeIn;

		.link:hover & {
			transform: scale(1.1);
			transition: transform $hoverDuration $easeOut;
		}
	}
	
	&__arrow {
		stroke-width: 0.075em;
	}

	&__text {
		animation: rotateReverse normal infinite $rotationDuration linear;
		transform-origin: 50% 50%;

		.link:hover & {
			animation-play-state: paused;
      
		}
	}

	&--alt {
		font-size: 1.15rem;
		letter-spacing: 0;
		word-spacing: 0;
	}
}

@keyframes rotate {
	to {
		transform: rotate(360deg);
	}
}

@keyframes rotateReverse {
	to {
		transform: rotate(-360deg);
	}
}
      
  }